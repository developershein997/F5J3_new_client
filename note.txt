sudo apt install postgresql postgresql-contrib -y
sudo systemctl status postgresql
CREATE DATABASE f5j3_db;
CREATE USER f5j3_user WITH PASSWORD 'luckymillion';
GRANT ALL PRIVILEGES ON DATABASE shan_test_client_db TO f5j3_user;
ALTER USER f5j3_user WITH PASSWORD 'luckymillion';

sudo -i -u postgres
psql -d f5j3_db

psql -h 127.0.0.1 -U f5j3_user -d f5j3_db

GRANT ALL ON SCHEMA public TO f5j3_user;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO f5j3_user;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON SEQUENCES TO f5j3_user;

sudo -i -u postgres
psql -d shan
ALTER SCHEMA public OWNER TO f5j3_user;



sudo chown -R www-data:www-data /var/www/shan_a3h1_client/storage
sudo chown -R www-data:www-data /var/www/shan_a3h1_client/bootstrap/cache
sudo chmod -R 775 /var/www/shan_a3h1_client/storage
sudo chmod -R 775 /var/www/shan_a3h1_client/bootstrap/cache


sudo systemctl restart postgresql

sudo nano /etc/postgresql/16/main/pg_hba.conf
root@gscpuls-prod:/var/www/gsc_plus# sudo nano /etc/postgresql/16/main/postgresql.conf
--------------------------------

sudo nano /etc/postgresql/16/main/postgresql.conf
sudo nano /etc/postgresql/16/main/pg_hba.conf # Replace 14 with your version
sudo systemctl restart postgresql
sudo systemctl enable postgresql # Ensure it starts on boot
sudo systemctl status postgresql # Check if it's running
sudo apt install php8.3-pgsql
sudo systemctl restart php8.3-fpm # Replace 8.1 with your PHP version
sudo systemctl restart nginx

php -r "file_put_contents('/var/www/a3h1_ttt/storage/logs/laravel.log', '');"
* * * * * cd /var/www/gsc_plus && php artisan schedule:run >> /dev/null 2>&1
tail -f /var/log/mysql/error.log

sudo chown -R www-data:www-data /var/www/gsc_plus/storage
sudo chown -R www-data:www-data /var/www/gsc_plus/bootstrap/cache
sudo chmod -R 775 /var/www/gsc_plus/storage
sudo chmod -R 775 /var/www/gsc_plus/bootstrap/cache

php artisan analytics:loss-summary --group=member_account
php artisan analytics:loss-summary --group=player_id

                        <!-- @if(Auth::user()->hasPermission('process_withdraw')) -->
<!-- @endif
                        @if(Auth::user()->hasPermission('process_deposit') || Auth::user()->hasPermission('view_deposit_requests')) -->
                        <!-- @can('process_deposit') -->
                        <!-- @endif -->

// create user and db 
sudo -i -u postgres
psql
\q

sudo -u postgres psql
sudo systemctl stop mysql
sudo systemctl disable mysql
sudo -u postgres psql -c "\l gsc_plus_one"
-- Create the user if it doesn't exist (replace with a strong password)
CREATE USER postgres WITH PASSWORD 'gscplus@#$2025one';

-- Grant all privileges on the database to this new user
GRANT ALL PRIVILEGES ON DATABASE gsc_plus_one TO postgres;

-- Grant create permission on the public schema (crucial for migrations)
GRANT CREATE ON SCHEMA public TO gsc_plus_user;

psql -h 127.0.0.1 -U amk -d gsc_plus_one

sudo chown -R www-data:www-data /var/www/gsc_plus/storage
sudo chown -R www-data:www-data /var/www/gsc_plus/bootstrap/cache
sudo chmod -R 775 /var/www/gsc_plus/storage
sudo chmod -R 775 /var/www/gsc_plus/bootstrap/cache

ALTER ROLE amk SET client_encoding TO 'utf8';
ALTER ROLE amk SET default_transaction_isolation TO 'read committed';
ALTER ROLE amk SET timezone TO 'UTC';
GRANT ALL PRIVILEGES ON DATABASE gsc_plus_one TO amk;

sudo -u postgres psql -c "\l gsc_plus_one"
sudo -u postgres psql -c "\dn+ public"

-- Grant all privileges on the public schema
GRANT ALL PRIVILEGES ON SCHEMA public TO amk;

-- Grant all privileges on all tables (current and future)
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL PRIVILEGES ON TABLES TO amk;

-- Grant privileges on sequences
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO amk;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL PRIVILEGES ON SEQUENCES TO amk;

-- Grant privileges on functions
GRANT ALL PRIVILEGES ON ALL FUNCTIONS IN SCHEMA public TO amk;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL PRIVILEGES ON FUNCTIONS TO amk;

-- Exit
\q

-------------
-- Grant all privileges on the public schema
GRANT ALL PRIVILEGES ON SCHEMA public TO amk;

-- Grant all privileges on all tables (current and future)
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL PRIVILEGES ON TABLES TO amk;

-- Grant privileges on sequences
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO amk;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL PRIVILEGES ON SEQUENCES TO amk;

-- Grant privileges on functions
GRANT ALL PRIVILEGES ON ALL FUNCTIONS IN SCHEMA public TO amk;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL PRIVILEGES ON FUNCTIONS TO amk;

-- Exit
\q

php -r "file_put_contents('/var/www/gsc_plus/storage/logs/laravel.log', '');"
// created dev branch for kzt

php artisan migrate:rollback --path=database/migrations/2024_03_10_135549_create_reports_table.php
// tail log

tail -f /var/www/gsc_plus/storage/logs/laravel.log
mv app/Http/Controllers/Api/V1/gplus/Webhook/SeamlessWalletController.php app/Http/Controllers/Api/V1/gplus/Webhook/GetBalanceController.php
GET /api/operators/provider-games?product_code=...&operator_code=...&offset=...&size=...&game_type=...


api/operators/wagers?operator_code=E004&sign=xxxxxx&request_time=1
 69155100?start=169155100000&end=169155100000

 composer require westacks/telebot



 
location /reverb {
    proxy_pass http://127.0.0.1:8081;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
    proxy_read_timeout 86400;
}

location /api/reverb {
    proxy_pass http://127.0.0.1:8081;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
    proxy_read_timeout 86400;
}